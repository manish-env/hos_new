{% comment %}
  Renders a "Frequently Bought Together" component with products in columns and a total price column

  Accepts:
  - product: {Object} Current product Liquid object
  - section_id: {String} The ID of the section that contains this component
  - recommended_products: {Array} Array of recommended products to show alongside the current product

  Usage:
  {% render 'frequently-bought-together', product: product, section_id: section.id, recommended_products: recommendations.products %}
{% endcomment %}

{{ 'component-frequently-bought-together.css' | asset_url | stylesheet_tag }}

<div class="frequently-bought-together" data-section-id="{{ section_id }}">
  <h2 class="frequently-bought-together__heading">{{ 'products.product.frequently_bought_together' | t | default: 'Frequently Bought Together' }}</h2>
  
  <div class="frequently-bought-together__grid">
    <div class="frequently-bought-together__products">
      {% assign total_price = product.price %}
      
      <!-- Current product -->
      <div class="frequently-bought-together__product">
        <div class="frequently-bought-together__product-inner">
          <div class="frequently-bought-together__checkbox-container">
            <input type="checkbox" id="fbt-product-{{ product.id }}" class="frequently-bought-together__checkbox" checked data-product-id="{{ product.id }}" data-variant-id="{{ product.selected_or_first_available_variant.id }}" data-price="{{ product.price }}">
            <label for="fbt-product-{{ product.id }}" class="frequently-bought-together__checkbox-label"></label>
          </div>
          
          <div class="frequently-bought-together__product-image">
            <img 
              src="{{ product.featured_media | image_url: width: 150 }}"
              alt="{{ product.featured_media.alt | escape }}"
              width="150"
              height="{{ 150 | divided_by: product.featured_media.aspect_ratio | round }}"
              loading="lazy"
            >
          </div>
          
          <div class="frequently-bought-together__product-info">
            <h3 class="frequently-bought-together__product-title">
              <a href="{{ product.url }}" class="frequently-bought-together__product-link">
                {{ product.title | escape }}
              </a>
            </h3>
            
            <div class="frequently-bought-together__product-price">
              {%- render 'price', product: product, use_variant: true, show_badges: false -%}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Plus icon between products -->
      <div class="frequently-bought-together__plus-icon">
        <span>+</span>
      </div>
      
      <!-- Recommended products (up to 3 more) -->
      {% for recommended_product in recommended_products limit: 3 %}
        {% if recommended_product.id != product.id %}
          {% assign total_price = total_price | plus: recommended_product.price %}
          
          <div class="frequently-bought-together__product">
            <div class="frequently-bought-together__product-inner">
              <div class="frequently-bought-together__checkbox-container">
                <input type="checkbox" id="fbt-product-{{ recommended_product.id }}" class="frequently-bought-together__checkbox" checked data-product-id="{{ recommended_product.id }}" data-variant-id="{{ recommended_product.selected_or_first_available_variant.id }}" data-price="{{ recommended_product.price }}">
                <label for="fbt-product-{{ recommended_product.id }}" class="frequently-bought-together__checkbox-label"></label>
              </div>
              
              <div class="frequently-bought-together__product-image">
                <img 
                  src="{{ recommended_product.featured_media | image_url: width: 150 }}"
                  alt="{{ recommended_product.featured_media.alt | escape }}"
                  width="150"
                  height="{{ 150 | divided_by: recommended_product.featured_media.aspect_ratio | round }}"
                  loading="lazy"
                >
              </div>
              
              <div class="frequently-bought-together__product-info">
                <h3 class="frequently-bought-together__product-title">
                  <a href="{{ recommended_product.url }}" class="frequently-bought-together__product-link">
                    {{ recommended_product.title | escape }}
                  </a>
                </h3>
                
                <div class="frequently-bought-together__product-price">
                  {%- render 'price', product: recommended_product, use_variant: true, show_badges: false -%}
                </div>
              </div>
            </div>
          </div>
          
          {% unless forloop.last and forloop.index < 3 %}
            <div class="frequently-bought-together__plus-icon">
              <span>+</span>
            </div>
          {% endunless %}
        {% endif %}
      {% endfor %}
    </div>
    
    <!-- Total price and add to cart column -->
    <div class="frequently-bought-together__total">
      <div class="frequently-bought-together__total-inner">
        <h3 class="frequently-bought-together__total-title">{{ 'products.product.total_price' | t | default: 'Total Price' }}</h3>
        
        <div class="frequently-bought-together__total-price" data-total-price="{{ total_price }}">
          {{ total_price | money }}
        </div>
        
        <div class="frequently-bought-together__total-savings">
          <span class="frequently-bought-together__savings-text">{{ 'products.product.bundle_savings' | t | default: 'Bundle Savings' }}</span>
          <span class="frequently-bought-together__savings-amount">{{ total_price | times: 0.1 | money }}</span>
        </div>
        
        <button type="button" class="frequently-bought-together__add-button button button--primary" data-add-to-cart>
          {{ 'products.product.add_selected_to_cart' | t | default: 'Add Selected to Cart' }}
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  class FrequentlyBoughtTogether extends HTMLElement {
    constructor() {
      super();
      this.checkboxes = this.querySelectorAll('.frequently-bought-together__checkbox');
      this.addButton = this.querySelector('[data-add-to-cart]');
      this.totalPriceElement = this.querySelector('.frequently-bought-together__total-price');
      this.savingsElement = this.querySelector('.frequently-bought-together__savings-amount');
      this.originalTotalPrice = parseFloat(this.totalPriceElement.getAttribute('data-total-price'));
      
      this.init();
    }
    
    init() {
      // Add event listeners to checkboxes
      this.checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', this.updateTotalPrice.bind(this));
      });
      
      // Add event listener to add button
      if (this.addButton) {
        this.addButton.addEventListener('click', this.addSelectedToCart.bind(this));
      }
    }
    
    updateTotalPrice() {
      let totalPrice = 0;
      
      this.checkboxes.forEach(checkbox => {
        if (checkbox.checked) {
          totalPrice += parseFloat(checkbox.getAttribute('data-price'));
        }
      });
      
      // Update total price display
      this.totalPriceElement.textContent = this.formatMoney(totalPrice);
      
      // Update savings amount (10% of total for demo purposes)
      const savings = totalPrice * 0.1;
      this.savingsElement.textContent = this.formatMoney(savings);
      
      // Disable add button if no products selected
      if (totalPrice === 0) {
        this.addButton.setAttribute('disabled', 'disabled');
      } else {
        this.addButton.removeAttribute('disabled');
      }
    }
    
    async addSelectedToCart() {
      this.addButton.classList.add('loading');
      this.addButton.textContent = 'Adding...';
      
      const selectedProducts = [];
      
      this.checkboxes.forEach(checkbox => {
        if (checkbox.checked) {
          selectedProducts.push({
            id: checkbox.getAttribute('data-variant-id'),
            quantity: 1
          });
        }
      });
      
      if (selectedProducts.length > 0) {
        try {
          // Add items to cart using Fetch API
          for (const item of selectedProducts) {
            await fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                items: [item]
              })
            });
          }
          
          // Refresh cart drawer or redirect to cart page
          if (typeof window.refreshCart === 'function') {
            window.refreshCart();
          } else {
            window.location.href = '/cart';
          }
          
        } catch (error) {
          console.error('Error adding products to cart:', error);
          this.addButton.textContent = 'Error - Try Again';
        }
      }
      
      this.addButton.classList.remove('loading');
      this.addButton.textContent = '{{ 'products.product.add_selected_to_cart' | t | default: 'Add Selected to Cart' }}';
    }
    
    formatMoney(cents) {
      return '$' + (cents / 100).toFixed(2);
    }
  }
  
  customElements.define('frequently-bought-together', FrequentlyBoughtTogether);
</script>
