{% schema %}
{
  "name": "Mx Video Carousel",
  "tag": "section",
  "class": "shopify-section--video-carousel",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Watch & Shop"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Enable Full Width",
      "default": false
    },
    {
      "type": "header",
      "content": "Social Interaction Settings"
    },
    {
      "type": "checkbox",
      "id": "show_view_count",
      "label": "Show View Count",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_like_button",
      "label": "Show Like Button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_like_count",
      "label": "Show Like Count",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_share_button",
      "label": "Show Share Button",
      "default": true
    },
    {
      "type": "header",
      "content": "Navigation Controls"
    },
    {
      "type": "color",
      "id": "nav_bg_color",
      "label": "Navigation Background Color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "nav_bg_opacity",
      "min": 10,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Navigation Background Opacity",
      "default": 70
    },
    {
      "type": "color",
      "id": "nav_icon_color",
      "label": "Navigation Icon Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "nav_icon_opacity",
      "min": 10,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Navigation Icon Opacity",
      "default": 60
    },
    {
      "type": "range",
      "id": "nav_size",
      "min": 24,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Navigation Button Size",
      "default": 36
    },
    {
      "type": "range",
      "id": "arrow_size",
      "min": 8,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Arrow Size",
      "default": 10
    }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video Block",
      "settings": [
        {
          "type": "url",
          "id": "video_url",
          "label": "Video URL (MP4 or hosted)"
        },
        {
          "type": "product",
          "id": "product_link",
          "label": "Linked Product"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text",
          "default": "Shop Now"
        },
        {
          "type": "text",
          "id": "view_count",
          "label": "Total Views",
          "default": "12.4K Views"
        },
        {
          "type": "text",
          "id": "like_count",
          "label": "Total Likes",
          "default": "1.2K"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Mx Video Carousel",
      "category": "Media"
    }
  ]
}
{% endschema %}

<div class="video-carousel-wrapper {% if section.settings.full_width %}full-width{% else %}page-width{% endif %}">
  {% if section.settings.title != blank %}
    <h2 class="carousel-title">{{ section.settings.title }}</h2>
  {% endif %}

  <div class="swiper video-swiper">
    <div class="swiper-wrapper">
      {% for block in section.blocks %}
        <div class="swiper-slide video-block">
          <div class="video-card" data-video="{{ block.settings.video_url }}">
            <video muted playsinline loop preload="metadata">
              <source src="{{ block.settings.video_url }}" type="video/mp4">
            </video>
            <div class="hover-overlay">
              <div class="hover-icons">
                {% if section.settings.show_view_count %}
                  <span class="view-count" data-views="{{ block.settings.view_count }}"><i class="fa fa-eye"></i> {{ block.settings.view_count }}</span>
                {% endif %}
                {% if section.settings.show_like_button %}
                  <span class="like-icon" data-likes="{{ block.settings.like_count }}" data-video-id="{{ forloop.index }}">
                    <i class="fa fa-heart"></i>
                    {% if section.settings.show_like_count %}
                      <span class="like-count">{{ block.settings.like_count }}</span>
                    {% endif %}
                  </span>
                {% endif %}
                {% if section.settings.show_share_button %}
                  <span class="share-icon" data-video-url="{{ block.settings.video_url }}"><i class="fa fa-share-alt"></i>
                    <div class="share-popup">
                      <div class="share-popup-item facebook">
                        <i class="fab fa-facebook"></i> Facebook
                      </div>
                      <div class="share-popup-item twitter">
                        <i class="fab fa-twitter"></i> Twitter
                      </div>
                      <div class="share-popup-item whatsapp">
                        <i class="fab fa-whatsapp"></i> WhatsApp
                      </div>
                      <div class="share-popup-item copy">
                        <i class="fa fa-link"></i> Copy Link
                      </div>
                    </div>
                  </span>
                {% endif %}
              </div>
            </div>
            <div class="video-overlay">
              <div class="left-info">
                <a href="{{ block.settings.product_link.url }}" class="product-title">
                  {{ block.settings.product_link.title }}
                </a>
                <a href="{{ block.settings.product_link.url }}" class="shop-button">
                  {{ block.settings.button_text }}
                </a>
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>

    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
  </div>
</div>

<!-- Modal with 3D Carousel -->
<div id="videoModal" class="video-modal hidden">
  <div class="video-modal-content">
    <span class="video-modal-close">&times;</span>
    <div class="modal-carousel-container">
      <div class="modal-carousel">
        <!-- Left video (3D effect) -->
        <div class="modal-carousel-item left-item">
          <video class="modal-video" muted loop>
            <source src="" type="video/mp4">
          </video>
          <div class="modal-video-overlay">
            <div class="modal-hover-icons">
              {% if section.settings.show_view_count %}
                <span class="modal-view-count"><i class="fa fa-eye"></i> <span class="left-view-count"></span></span>
              {% endif %}
              {% if section.settings.show_like_button %}
                <span class="modal-like-icon" data-video-position="left">
                  <i class="fa fa-heart"></i>
                  {% if section.settings.show_like_count %}
                    <span class="left-like-count"></span>
                  {% endif %}
                </span>
              {% endif %}
              {% if section.settings.show_share_button %}
                <span class="modal-share-icon" data-video-position="left"><i class="fa fa-share-alt"></i>
                  <div class="modal-share-popup">
                    <div class="share-popup-item facebook">
                      <i class="fab fa-facebook"></i> Facebook
                    </div>
                    <div class="share-popup-item twitter">
                      <i class="fab fa-twitter"></i> Twitter
                    </div>
                    <div class="share-popup-item whatsapp">
                      <i class="fab fa-whatsapp"></i> WhatsApp
                    </div>
                    <div class="share-popup-item copy">
                      <i class="fa fa-link"></i> Copy Link
                    </div>
                  </div>
                </span>
              {% endif %}
            </div>
          </div>
        </div>
        
        <!-- Center video (main) -->
        <div class="modal-carousel-item center-item">
          <video id="modalVideo" class="modal-video" controls autoplay>
            <source src="" type="video/mp4">
          </video>
          <div class="modal-video-overlay">
            <div class="modal-hover-icons">
              {% if section.settings.show_view_count %}
                <span class="modal-view-count"><i class="fa fa-eye"></i> <span class="center-view-count"></span></span>
              {% endif %}
              {% if section.settings.show_like_button %}
                <span class="modal-like-icon" data-video-position="center">
                  <i class="fa fa-heart"></i>
                  {% if section.settings.show_like_count %}
                    <span class="center-like-count"></span>
                  {% endif %}
                </span>
              {% endif %}
              {% if section.settings.show_share_button %}
                <span class="modal-share-icon" data-video-position="center"><i class="fa fa-share-alt"></i>
                  <div class="modal-share-popup">
                    <div class="share-popup-item facebook">
                      <i class="fab fa-facebook"></i> Facebook
                    </div>
                    <div class="share-popup-item twitter">
                      <i class="fab fa-twitter"></i> Twitter
                    </div>
                    <div class="share-popup-item whatsapp">
                      <i class="fab fa-whatsapp"></i> WhatsApp
                    </div>
                    <div class="share-popup-item copy">
                      <i class="fa fa-link"></i> Copy Link
                    </div>
                  </div>
                </span>
              {% endif %}
            </div>
            <a href="#" class="modal-shop-button" id="modalShopButton">Shop Now</a>
          </div>
        </div>
        
        <!-- Right video (3D effect) -->
        <div class="modal-carousel-item right-item">
          <video class="modal-video" muted loop>
            <source src="" type="video/mp4">
          </video>
          <div class="modal-video-overlay">
            <div class="modal-hover-icons">
              {% if section.settings.show_view_count %}
                <span class="modal-view-count"><i class="fa fa-eye"></i> <span class="right-view-count"></span></span>
              {% endif %}
              {% if section.settings.show_like_button %}
                <span class="modal-like-icon" data-video-position="right">
                  <i class="fa fa-heart"></i>
                  {% if section.settings.show_like_count %}
                    <span class="right-like-count"></span>
                  {% endif %}
                </span>
              {% endif %}
              {% if section.settings.show_share_button %}
                <span class="modal-share-icon" data-video-position="right"><i class="fa fa-share-alt"></i>
                  <div class="modal-share-popup">
                    <div class="share-popup-item facebook">
                      <i class="fab fa-facebook"></i> Facebook
                    </div>
                    <div class="share-popup-item twitter">
                      <i class="fab fa-twitter"></i> Twitter
                    </div>
                    <div class="share-popup-item whatsapp">
                      <i class="fab fa-whatsapp"></i> WhatsApp
                    </div>
                    <div class="share-popup-item copy">
                      <i class="fa fa-link"></i> Copy Link
                    </div>
                  </div>
                </span>
              {% endif %}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Navigation arrows for modal carousel -->
      <div class="modal-nav prev-modal">‹</div>
      <div class="modal-nav next-modal">›</div>
    </div>
  </div>
</div>

<style>
.video-carousel-wrapper {
  padding: 40px 0;
}
.page-width {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}
.full-width {
  width: 100%;
  padding: 0 10px;
}
.carousel-title {
  text-align: center;
  font-size: 28px;
  margin-bottom: 20px;
}
.video-block {
  padding: 10px;
  box-sizing: border-box;
}
.video-card {
  position: relative;
  overflow: hidden;
  border-radius: 12px;
  cursor: pointer;
}
.video-card video {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 12px;
}
.video-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 12px;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.5), transparent 50%);
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}
.left-info {
  display: flex;
  flex-direction: column;
  gap: 6px;
}
.product-title {
  font-weight: 600;
  color: #fff;
  text-decoration: none;
  font-size: 14px;
}
.shop-button {
  background: white;
  color: black;
  padding: 5px 10px;
  border-radius: 5px;
  font-size: 13px;
  text-decoration: none;
  font-weight: 500;
}
/* Hover overlay styles */
.hover-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);
  opacity: 0;
  transition: opacity 0.3s ease;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-end;
  padding: 12px;
  z-index: 2;
}

.video-card:hover .hover-overlay {
  opacity: 1;
}

.hover-icons {
  display: flex;
  gap: 10px;
  align-items: center;
}

.view-count, .like-icon, .share-icon {
  color: white;
  font-size: 12px;
  background: rgba(0,0,0,0.6);
  padding: 6px 8px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.like-icon:hover, .share-icon:hover {
  background: rgba(0,0,0,0.8);
  transform: scale(1.1);
}

.like-icon.liked {
  background: rgba(255,0,0,0.6);
}

.like-icon.liked i {
  color: #ff3b5c;
}

/* Share popup styles */
.share-popup {
  position: absolute;
  top: 40px;
  right: 0;
  background: white;
  border-radius: 8px;
  padding: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.3);
  display: none;
  z-index: 100;
  width: 200px;
}

.share-popup.active {
  display: block;
}

.share-popup-item {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 8px 10px;
  cursor: pointer;
  color: #333;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.share-popup-item:hover {
  background: #f5f5f5;
}

.share-popup-item i {
  font-size: 16px;
  width: 20px;
  text-align: center;
}

.share-popup-item.facebook i {
  color: #1877f2;
}

.share-popup-item.twitter i {
  color: #1da1f2;
}

.share-popup-item.whatsapp i {
  color: #25d366;
}

.share-popup-item.copy i {
  color: #333;
}
.swiper-slide {
  width: 260px !important;
}
.swiper-button-prev,
.swiper-button-next {
  {% assign nav_bg_opacity = section.settings.nav_bg_opacity | times: 0.01 %}
  {% assign nav_icon_opacity = section.settings.nav_icon_opacity | times: 0.01 %}
  {% assign nav_size = section.settings.nav_size | default: 36 %}
  color: {{ section.settings.nav_icon_color | color_modify: 'alpha', nav_icon_opacity }};
  background: {{ section.settings.nav_bg_color | color_modify: 'alpha', nav_bg_opacity }};
  backdrop-filter: blur(4px);
  
  width: {{ nav_size }}px;
  height: {{ nav_size }}px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  top: 45%;
  z-index: 100 !important;
  opacity: 1 !important;
  visibility: visible !important;
  display: flex !important;
  justify-content: center;
  align-items: center;
  transition: all 0.2s ease;
}

.swiper-button-prev::after,
.swiper-button-next::after {
  font-size: 15px !important;
  color:white !important;
  font-weight: bold;
  line-height: 1;
  margin-top: 1px;
}

.swiper-button-prev:hover,
.swiper-button-next:hover {
  {% assign nav_bg_opacity_hover = section.settings.nav_bg_opacity | plus: 20 | at_most: 100 | times: 0.01 %}
  {% assign nav_icon_opacity_hover = section.settings.nav_icon_opacity | plus: 20 | at_most: 100 | times: 0.01 %}
  background: {{ section.settings.nav_bg_color | color_modify: 'alpha', nav_bg_opacity_hover }};
  color: {{ section.settings.nav_icon_color | color_modify: 'alpha', nav_icon_opacity_hover }};
  opacity: 1 !important;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

@media (max-width: 767px) {
  .swiper-slide {
    width: 75% !important;
  }
}

/* Modal styles with 3D carousel */
.video-modal {
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0,0,0,0.85); /* Reduced opacity */
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(5px); /* Add subtle blur effect */
}
.video-modal.hidden {
  display: none;
}
.video-modal-content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* 3D Carousel Container */
.modal-carousel-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 1500px;
  overflow: hidden;
}

.modal-carousel {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-style: preserve-3d;
}

/* Mobile-like dimensions for videos */
.modal-carousel-item {
  position: absolute;
  width: 360px; /* Mobile width */
  height: 640px; /* Mobile height - 16:9 aspect ratio */
  transition: all 0.5s ease;
  backface-visibility: hidden;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0,0,0,0.5);
}

/* Modal video overlay styles */
.modal-video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 15px;
  pointer-events: none;
}

.modal-hover-icons {
  display: flex;
  gap: 10px;
  align-items: center;
  align-self: flex-end;
  pointer-events: auto;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.modal-carousel-item:hover .modal-hover-icons {
  opacity: 1;
}

.modal-view-count, .modal-like-icon, .modal-share-icon {
  color: white;
  font-size: 14px;
  background: rgba(0,0,0,0.6);
  padding: 6px 10px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  gap: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
}

.modal-like-icon:hover, .modal-share-icon:hover {
  background: rgba(0,0,0,0.8);
  transform: scale(1.1);
}

.modal-like-icon.liked {
  background: rgba(255,0,0,0.6);
}

.modal-like-icon.liked i {
  color: #ff3b5c;
}

/* Modal share popup */
.modal-share-popup {
  position: absolute;
  top: 40px;
  right: 0;
  background: white;
  border-radius: 8px;
  padding: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.3);
  display: none;
  z-index: 100;
  width: 200px;
}

.modal-share-popup.active {
  display: block;
}

.modal-shop-button {
  align-self: center;
  margin-bottom: 20px;
  background: white;
  color: black;
  padding: 10px 20px;
  border-radius: 5px;
  font-size: 16px;
  text-decoration: none;
  font-weight: 600;
  pointer-events: auto;
  transition: all 0.2s ease;
  text-align: center;
  display: inline-block;
}

.modal-shop-button:hover {
  background: #f0f0f0;
  transform: scale(1.05);
}

.modal-video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 16px;
}

/* Positioning for 3D effect */
.modal-carousel {
  transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  transform-style: preserve-3d;
}

.center-item {
  z-index: 3;
  transform: translateZ(0);
  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.left-item {
  z-index: 1;
  transform: translateX(-50%) translateZ(-200px) rotateY(30deg);
  opacity: 0.7;
  filter: brightness(0.7);
  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.right-item {
  z-index: 1;
  transform: translateX(50%) translateZ(-200px) rotateY(-30deg);
  opacity: 0.7;
  filter: brightness(0.7);
  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

/* Animation classes for transitions */
.modal-carousel.transition-left {
  transform: translateX(15%) rotateY(-8deg) scale(0.95);
}

.modal-carousel.transition-right {
  transform: translateX(-15%) rotateY(8deg) scale(0.95);
}

/* Additional animation classes for items during transition */
.transition-left .left-item {
  transform: translateX(-30%) translateZ(-150px) rotateY(45deg);
  opacity: 0.5;
}

.transition-left .center-item {
  transform: translateX(-10%) translateZ(-50px) rotateY(10deg);
}

.transition-left .right-item {
  transform: translateX(30%) translateZ(-100px) rotateY(-15deg);
  opacity: 0.8;
}

.transition-right .left-item {
  transform: translateX(-30%) translateZ(-100px) rotateY(15deg);
  opacity: 0.8;
}

.transition-right .center-item {
  transform: translateX(10%) translateZ(-50px) rotateY(-10deg);
}

.transition-right .right-item {
  transform: translateX(30%) translateZ(-150px) rotateY(-45deg);
  opacity: 0.5;
}

/* Navigation for modal carousel */
.modal-nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 50px;
  height: 50px;
  background: rgba(255,255,255,0.2);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 30px;
  cursor: pointer;
  z-index: 10;
  transition: all 0.3s ease;
}

.modal-nav:hover {
  background: rgba(255,255,255,0.4);
}

.prev-modal {
  left: 20px;
}

.next-modal {
  right: 20px;
}

.video-modal-close {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 36px;
  height: 36px;
  font-size: 30px;
  color: white;
  cursor: pointer;
  z-index: 30;
  background: rgba(0,0,0,0.6);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 0.8;
  transition: all 0.2s ease;
}

.video-modal-close:hover {
  background: rgba(0,0,0,0.9);
  transform: scale(1.1);
}
</style>

<!-- Swiper + Modal Scripts -->
<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Initialize main carousel
    new Swiper('.video-swiper', {
      slidesPerView: 'auto',
      spaceBetween: 20,
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev'
      }
    });

    // Modal variables
    const modal = document.getElementById('videoModal');
    const modalVideo = document.getElementById('modalVideo');
    const closeBtn = document.querySelector('.video-modal-close');
    const prevModalBtn = document.querySelector('.prev-modal');
    const nextModalBtn = document.querySelector('.next-modal');
    const leftVideo = document.querySelector('.left-item video');
    const rightVideo = document.querySelector('.right-item video');
    const modalShopButton = document.getElementById('modalShopButton');
    const leftViewCount = document.querySelector('.left-view-count');
    const centerViewCount = document.querySelector('.center-view-count');
    const rightViewCount = document.querySelector('.right-view-count');
    
    // Store all videos and data for 3D carousel
    let allVideos = [];
    let allViewCounts = [];
    let allProductUrls = [];
    let allButtonTexts = [];
    let allLikeCounts = [];
    let likedVideos = JSON.parse(localStorage.getItem('likedVideos') || '{}');
    let currentVideoIndex = 0;
    
    // Collect all videos and data
    document.querySelectorAll('.video-card').forEach((card, index) => {
      const videoSrc = card.getAttribute('data-video');
      const viewCount = card.querySelector('.view-count')?.textContent.replace(/^\s*\S+\s*/, '').trim() || '0';
      const productLink = card.querySelector('.product-title').getAttribute('href');
      const buttonText = card.querySelector('.shop-button').textContent.trim();
      const likeCount = card.querySelector('.like-icon')?.getAttribute('data-likes') || '0';
      
      allVideos.push(videoSrc);
      allViewCounts.push(viewCount);
      allProductUrls.push(productLink);
      allButtonTexts.push(buttonText);
      allLikeCounts.push(likeCount);
      
      // Set liked state if this video was previously liked
      if (likedVideos[videoSrc]) {
        const likeIcon = card.querySelector('.like-icon');
        if (likeIcon) likeIcon.classList.add('liked');
      }
      
      // Add click event to open modal
      card.addEventListener('click', function() {
        currentVideoIndex = index;
        openModalWithVideos(currentVideoIndex);
      });
    });
    
    // Function to open modal with 3D carousel
    function openModalWithVideos(index) {
      // Set center video (main)
      modalVideo.querySelector('source').src = allVideos[index];
      modalVideo.load();
      modalVideo.play();
      centerViewCount.textContent = allViewCounts[index];
      
      // Set shop button
      modalShopButton.textContent = allButtonTexts[index];
      modalShopButton.href = allProductUrls[index];
      
      // Set left video
      const leftIndex = (index - 1 + allVideos.length) % allVideos.length;
      leftVideo.querySelector('source').src = allVideos[leftIndex];
      leftVideo.load();
      leftVideo.play();
      leftViewCount.textContent = allViewCounts[leftIndex];
      
      // Set right video
      const rightIndex = (index + 1) % allVideos.length;
      rightVideo.querySelector('source').src = allVideos[rightIndex];
      rightVideo.load();
      rightVideo.play();
      rightViewCount.textContent = allViewCounts[rightIndex];
      
      // Update like counts and liked state in modal
      const leftLikeCount = document.querySelector('.left-like-count');
      const centerLikeCount = document.querySelector('.center-like-count');
      const rightLikeCount = document.querySelector('.right-like-count');
      
      if (leftLikeCount) leftLikeCount.textContent = allLikeCounts[leftIndex];
      if (centerLikeCount) centerLikeCount.textContent = allLikeCounts[index];
      if (rightLikeCount) rightLikeCount.textContent = allLikeCounts[rightIndex];
      
      // Update liked state
      const leftLikeIcon = document.querySelector('.modal-like-icon[data-video-position="left"]');
      const centerLikeIcon = document.querySelector('.modal-like-icon[data-video-position="center"]');
      const rightLikeIcon = document.querySelector('.modal-like-icon[data-video-position="right"]');
      
      if (leftLikeIcon) leftLikeIcon.classList.toggle('liked', likedVideos[allVideos[leftIndex]]);
      if (centerLikeIcon) centerLikeIcon.classList.toggle('liked', likedVideos[allVideos[index]]);
      if (rightLikeIcon) rightLikeIcon.classList.toggle('liked', likedVideos[allVideos[rightIndex]]);
      
      // Apply a subtle animation to the carousel
      const carousel = document.querySelector('.modal-carousel');
      carousel.style.transform = 'scale(0.95)';
      setTimeout(() => {
        carousel.style.transform = 'scale(1)';
      }, 50);
      
      // Show modal
      modal.classList.remove('hidden');
    }
    
    // Navigate to previous video
    prevModalBtn.addEventListener('click', function(e) {
      e.stopPropagation(); // Prevent event bubbling
      
      // Add transition class
      const carousel = document.querySelector('.modal-carousel');
      carousel.classList.add('transition-left');
      
      // Wait for transition to complete before changing videos
      setTimeout(() => {
        currentVideoIndex = (currentVideoIndex - 1 + allVideos.length) % allVideos.length;
        openModalWithVideos(currentVideoIndex);
        
        // Remove transition class after a short delay
        setTimeout(() => {
          carousel.classList.remove('transition-left');
        }, 50);
      }, 300);
    });
    
    // Navigate to next video
    nextModalBtn.addEventListener('click', function(e) {
      e.stopPropagation(); // Prevent event bubbling
      
      // Add transition class
      const carousel = document.querySelector('.modal-carousel');
      carousel.classList.add('transition-right');
      
      // Wait for transition to complete before changing videos
      setTimeout(() => {
        currentVideoIndex = (currentVideoIndex + 1) % allVideos.length;
        openModalWithVideos(currentVideoIndex);
        
        // Remove transition class after a short delay
        setTimeout(() => {
          carousel.classList.remove('transition-right');
        }, 50);
      }, 300);
    });
    
    // Close modal
    closeBtn.addEventListener('click', function(e) {
      e.stopPropagation(); // Prevent event bubbling
      modalVideo.pause();
      leftVideo.pause();
      rightVideo.pause();
      modal.classList.add('hidden');
    });
    
    // Close modal when clicking outside
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        modalVideo.pause();
        leftVideo.pause();
        rightVideo.pause();
        modal.classList.add('hidden');
      }
    });
    
    // Prevent modal closing when clicking on modal content
    document.querySelector('.modal-carousel-container').addEventListener('click', function(e) {
      e.stopPropagation();
    });
    
    // Handle like button clicks in the carousel
    document.querySelectorAll('.like-icon').forEach((icon, index) => {
      icon.addEventListener('click', function(e) {
        e.stopPropagation();
        const videoSrc = allVideos[index];
        
        // Toggle liked state
        this.classList.toggle('liked');
        likedVideos[videoSrc] = !likedVideos[videoSrc];
        
        // Save liked state to localStorage
        localStorage.setItem('likedVideos', JSON.stringify(likedVideos));
        
        // Update like count (this would normally be an API call to update the backend)
        // For demo purposes, we'll just toggle the visual state
      });
    });
    
    // Handle share button clicks in the carousel
    document.querySelectorAll('.share-icon').forEach((icon, index) => {
      icon.addEventListener('click', function(e) {
        e.stopPropagation();
        
        // Close all other share popups first
        document.querySelectorAll('.share-popup.active').forEach(popup => {
          if (popup !== this.querySelector('.share-popup')) {
            popup.classList.remove('active');
          }
        });
        
        // Toggle this share popup
        const popup = this.querySelector('.share-popup');
        popup.classList.toggle('active');
        
        // Prevent closing when clicking inside popup
        popup.addEventListener('click', function(e) {
          e.stopPropagation();
        });
      });
    });
    
    // Handle like button clicks in the modal
    document.querySelectorAll('.modal-like-icon').forEach(icon => {
      icon.addEventListener('click', function(e) {
        e.stopPropagation();
        const position = this.getAttribute('data-video-position');
        let videoIndex;
        
        if (position === 'left') {
          videoIndex = (currentVideoIndex - 1 + allVideos.length) % allVideos.length;
        } else if (position === 'center') {
          videoIndex = currentVideoIndex;
        } else if (position === 'right') {
          videoIndex = (currentVideoIndex + 1) % allVideos.length;
        }
        
        const videoSrc = allVideos[videoIndex];
        
        // Toggle liked state
        this.classList.toggle('liked');
        likedVideos[videoSrc] = !likedVideos[videoSrc];
        
        // Update the like state in the main carousel too
        document.querySelectorAll('.video-card').forEach((card, idx) => {
          if (idx === videoIndex) {
            const likeIcon = card.querySelector('.like-icon');
            if (likeIcon) likeIcon.classList.toggle('liked', likedVideos[videoSrc]);
          }
        });
        
        // Save liked state to localStorage
        localStorage.setItem('likedVideos', JSON.stringify(likedVideos));
      });
    });
    
    // Handle share button clicks in the modal
    document.querySelectorAll('.modal-share-icon').forEach(icon => {
      icon.addEventListener('click', function(e) {
        e.stopPropagation();
        
        // Close all other share popups first
        document.querySelectorAll('.modal-share-popup.active').forEach(popup => {
          if (popup !== this.querySelector('.modal-share-popup')) {
            popup.classList.remove('active');
          }
        });
        
        // Toggle this share popup
        const popup = this.querySelector('.modal-share-popup');
        popup.classList.toggle('active');
        
        // Prevent closing when clicking inside popup
        popup.addEventListener('click', function(e) {
          e.stopPropagation();
        });
      });
    });
    
    // Handle share popup item clicks
    document.querySelectorAll('.share-popup-item, .modal-share-popup .share-popup-item').forEach(item => {
      item.addEventListener('click', function(e) {
        e.stopPropagation();
        const platform = this.classList[1]; // facebook, twitter, whatsapp, copy
        const videoUrl = this.closest('.share-icon, .modal-share-icon').getAttribute('data-video-url') || 
                         allVideos[currentVideoIndex];
        let shareUrl = '';
        
        // Create share URLs for different platforms
        switch(platform) {
          case 'facebook':
            shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(videoUrl)}`;
            window.open(shareUrl, '_blank');
            break;
          case 'twitter':
            shareUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(videoUrl)}`;
            window.open(shareUrl, '_blank');
            break;
          case 'whatsapp':
            shareUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(videoUrl)}`;
            window.open(shareUrl, '_blank');
            break;
          case 'copy':
            navigator.clipboard.writeText(videoUrl).then(() => {
              alert('Video link copied to clipboard!');
            });
            break;
        }
        
        // Close the popup after action
        this.closest('.share-popup, .modal-share-popup').classList.remove('active');
      });
    });
    
    // Close share popups when clicking outside
    document.addEventListener('click', function() {
      document.querySelectorAll('.share-popup.active, .modal-share-popup.active').forEach(popup => {
        popup.classList.remove('active');
      });
    });
  });
</script>
