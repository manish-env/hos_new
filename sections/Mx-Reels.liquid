{% comment %}
  MX — Video Carousel (Reels) — Sonali skin
  • Page/full width
  • 9:16 reels
  • Theme-aligned (light borders, subtle radius, magenta accent)
{% endcomment %}

<section
  id="mxvc-{{ section.id }}"
  class="mxvc color-{{ section.settings.color_scheme }} {% if section.settings.width_mode == 'full' %}is-full{% else %}is-page{% endif %}"
  data-mode="{% if section.settings.width_mode == 'full' %}full{% else %}page{% endif %}"
  style="
    --mx-pad-top: {{ section.settings.pad_top }}px;
    --mx-pad-bottom: {{ section.settings.pad_bottom }}px;
    --mx-gap: {{ section.settings.gap }}px;
    --mx-radius: {{ section.settings.radius }}px;
    --mx-accent: {{ section.settings.accent_color }};
  "
>
  <div class="{% if section.settings.width_mode == 'page' %}page-width{% else %}mxvc__bleed{% endif %}">
    {% if section.settings.heading != blank or section.settings.subheading != blank %}
      <header class="mxvc__header">
        {% if section.settings.heading != blank %}<h2 class="mxvc__title">{{ section.settings.heading | escape }}</h2>{% endif %}
        {% if section.settings.subheading != blank %}<p class="mxvc__subtitle">{{ section.settings.subheading | escape }}</p>{% endif %}
      </header>
    {% endif %}

    <div class="mxvc__wrap">
      {% if section.settings.show_nav %}
        <button class="mxvc__nav mxvc__nav--prev" aria-label="Previous" type="button">‹</button>
      {% endif %}

      <div class="mxvc__track" data-track>
        {%- for block in section.blocks -%}
          {%- assign wrap_card = false -%}
          {%- if block.settings.link_entire_card and block.settings.product != blank -%}
            {%- assign wrap_card = true -%}
          {%- endif -%}

          <article class="mxvc__slide" {{ block.shopify_attributes }}>
            {% if wrap_card %}
              <a class="mxvc__link" href="{{ block.settings.product.url }}" aria-label="{{ block.settings.product.title | escape }}">
            {% endif %}

            <div class="mxvc__media">
              {% if block.settings.video_source == 'file' and block.settings.video != blank %}
                {{ block.settings.video
                  | video_tag:
                    image_size: '1200x',
                    autoplay: section.settings.autoplay,
                    loop: true,
                    muted: true,
                    controls: section.settings.show_controls,
                    playsinline: true
                }}
              {% elsif block.settings.video_source == 'url' and block.settings.video_url != blank %}
                <video
                  {% if block.settings.poster != blank %}poster="{{ block.settings.poster | image_url: width: 1200 }}"{% endif %}
                  {% if section.settings.autoplay %}autoplay{% endif %}
                  {% if section.settings.show_controls %}controls{% endif %}
                  loop muted playsinline preload="metadata"
                >
                  <source src="{{ block.settings.video_url }}" type="video/mp4">
                </video>
              {% else %}
                <div class="mxvc__placeholder"><span>Add a video</span></div>
              {% endif %}

              {% if block.settings.product != blank and block.settings.show_product_info %}
                <div class="mxvc__prod">
                  <div class="mxvc__prod-meta">
                    <span class="mxvc__prod-title">{{ block.settings.product.title }}</span>
                    <span class="mxvc__prod-price">
                      {% if block.settings.product.compare_at_price > block.settings.product.price %}
                        <s>{{ block.settings.product.compare_at_price | money }}</s>
                      {% endif %}
                      {{ block.settings.product.price | money }}
                    </span>
                  </div>
                  {% if block.settings.button_label != blank %}
                    {% if wrap_card %}
                      <span class="mxvc__prod-btn is-ghost">{{ block.settings.button_label }}</span>
                    {% else %}
                      <a class="mxvc__prod-btn" href="{{ block.settings.product.url }}">{{ block.settings.button_label }}</a>
                    {% endif %}
                  {% endif %}
                </div>
              {% endif %}
            </div>

            {% if wrap_card %}
              </a>
            {% endif %}
          </article>
        {%- endfor -%}
      </div>

      {% if section.settings.show_nav %}
        <button class="mxvc__nav mxvc__nav--next" aria-label="Next" type="button">›</button>
      {% endif %}
    </div>
  </div>

  <script>
  (() => {
    const root = document.getElementById('mxvc-{{ section.id }}');
    if (!root) return;
    const track = root.querySelector('[data-track]');
    if (!track) return;

    function scrollBySlide(dir) {
      const slide = track.querySelector('.mxvc__slide');
      if (!slide) return;
      const gap = parseFloat(getComputedStyle(track).getPropertyValue('--mx-gap')) || 16;
      const amount = slide.getBoundingClientRect().width + gap;
      track.scrollBy({ left: dir * amount, behavior: 'smooth' });
    }

    const prev = root.querySelector('.mxvc__nav--prev');
    const next = root.querySelector('.mxvc__nav--next');
    if (prev) prev.addEventListener('click', () => scrollBySlide(-1));
    if (next) next.addEventListener('click', () => scrollBySlide(1));

    // Visibility-based play/pause
    const vids = track.querySelectorAll('video');
    if ('IntersectionObserver' in window && vids.length) {
      const io = new IntersectionObserver((entries) => {
        entries.forEach(({ isIntersecting, target }) => {
          if (isIntersecting && {{ section.settings.autoplay | json }}) { target.play().catch(() => {}); }
          else { target.pause(); }
        });
      }, { root: track, threshold: 0.6 });
      vids.forEach(v => io.observe(v));
    }

    // Drag to scroll
    let isDown = false, startX = 0, scrollLeft = 0;
    track.addEventListener('mousedown', (e) => {
      isDown = true; track.classList.add('is-dragging');
      startX = e.pageX - track.offsetLeft; scrollLeft = track.scrollLeft;
    });
    window.addEventListener('mouseup', () => { isDown = false; track.classList.remove('is-dragging'); });
    window.addEventListener('mousemove', (e) => {
      if (!isDown) return;
      e.preventDefault(); const x = e.pageX - track.offsetLeft; const walk = (x - startX);
      track.scrollLeft = scrollLeft - walk;
    });
  })();
  </script>

  <style>
    #mxvc-{{ section.id }} { padding-top: var(--mx-pad-top); padding-bottom: var(--mx-pad-bottom); }

    /* Full-bleed container when width = full */
    #mxvc-{{ section.id }} .mxvc__bleed {
      width: 100vw;
      margin-left: calc(50% - 50vw);
      margin-right: calc(50% - 50vw);
    }

    /* Header: small, uppercase */
    .mxvc__header { margin-bottom: 14px; text-align:center; }
    .mxvc__title { margin:0; font-size:15px; letter-spacing:.08em; text-transform:uppercase; font-weight:600; color: var(--color-foreground, #222); }
    .mxvc__subtitle { margin:6px 0 0; opacity:.7; font-size:13px; }

    .mxvc__wrap { position: relative; }

    /* Track; hide scrollbar */
    #mxvc-{{ section.id }} .mxvc__track {
      --mx-cols: 1.5;
      display: grid;
      grid-auto-flow: column;
      grid-auto-columns: calc(100% / var(--mx-cols));
      gap: var(--mx-gap);
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      scroll-behavior: smooth;
      -webkit-overflow-scrolling: touch;
      padding-bottom: 4px;
      scrollbar-width: none;
      -ms-overflow-style: none;
    }
    .mxvc__track::-webkit-scrollbar { display: none; }
    .mxvc__track.is-dragging { cursor: grabbing; }

    .mxvc__slide { scroll-snap-align: start; }

    /* Card — light border, subtle radius */
    .mxvc__media {
      position: relative;
      width: 100%;
      aspect-ratio: 9 / 16;
      border-radius: var(--mx-radius);
      overflow: hidden;
      background: #fafafa;
      border: 1px solid #ececec;
      box-shadow: none;
    }
    .mxvc__media video { width: 100%; height: 100%; object-fit: cover; display: block; }
    .mxvc__placeholder { display:grid; place-items:center; color:#999; font-size:.9rem; height:100%; background:#f3f3f3; }

    /* Whole-card link */
    .mxvc__link { display:block; text-decoration:none; color:inherit; }

    /* Product overlay — tidy white chip */
    .mxvc__prod {
      position: absolute; left: 10px; right: 10px; bottom: 10px;
      display: flex; align-items: center; justify-content: space-between; gap: 10px;
      padding: 8px 10px;
      background: rgba(255,255,255,.96);
      border: 1px solid #eaeaea;
      border-radius: 10px;
      backdrop-filter: blur(1px);
    }
    .mxvc__prod-meta { display: grid; gap: 2px; min-width: 0; }
    .mxvc__prod-title { font-weight: 600; font-size: .92rem; color: #222; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
    .mxvc__prod-price { font-size: .9rem; color: var(--mx-accent); }
    .mxvc__prod-price s { color: #999; margin-right: 6px; }

    .mxvc__prod-btn,
    .mxvc__prod-btn.is-ghost {
      flex: 0 0 auto;
      padding: 7px 12px;
      border-radius: 999px;
      font-weight: 600;
      font-size: .84rem;
      text-decoration: none;
      line-height: 1;
      border: 1px solid var(--mx-accent);
    }
    .mxvc__prod-btn { background: var(--mx-accent); color: #fff; }
    .mxvc__prod-btn:hover { filter: brightness(.95); }
    .mxvc__prod-btn.is-ghost { background: transparent; color: var(--mx-accent); cursor: default; }

    /* Nav buttons — light, subtle */
    .mxvc__nav {
      position: absolute; top: 50%; transform: translateY(-50%);
      border: 1px solid #e6e6e6; background: #f7f7f7; color: #777;
      width: 36px; height: 36px; border-radius: 999px;
      display: grid; place-items: center; cursor: pointer; z-index: 2;
    }
    .mxvc__nav:hover { background:#efefef; color:#555; }
    .mxvc__nav--prev { left: 6px; }
    .mxvc__nav--next { right: 6px; }

    /* Columns */
    @media (min-width: 768px) {
      #mxvc-{{ section.id }} .mxvc__track { --mx-cols: 3; }
    }
    @media (min-width: 1024px) {
      #mxvc-{{ section.id }}[data-mode="page"] .mxvc__track { --mx-cols: 4; }
      #mxvc-{{ section.id }}[data-mode="full"] .mxvc__track { --mx-cols: 5; }
    }
  </style>
</section>

{% schema %}
{
  "name": "MX Video",
  "tag": "section",
  "class": "section",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "Latest Reels" },
    { "type": "text", "id": "subheading", "label": "Subheading", },
    { "type": "select", "id": "width_mode", "label": "Section width", "default": "page", "options": [
      { "value": "page", "label": "Page width (4 on desktop)" },
      { "value": "full", "label": "Full width (5 on desktop)" }
    ]},
    { "type": "select", "id": "color_scheme", "label": "Color scheme", "default": "background-1", "options": [
      { "value": "background-1", "label": "Background 1" },
      { "value": "background-2", "label": "Background 2" },
      { "value": "inverse", "label": "Inverse" }
    ]},
    { "type": "color", "id": "accent_color", "label": "Accent (price & CTA)", "default": "#FA05E8" },
    { "type": "range", "id": "gap", "label": "Card gap (px)", "min": 8, "max": 32, "step": 1, "default": 16 },
    { "type": "range", "id": "radius", "label": "Card corner radius (px)", "min": 0, "max": 16, "step": 1, "default": 8 },
    { "type": "checkbox", "id": "autoplay", "label": "Autoplay videos (muted)", "default": true },
    { "type": "checkbox", "id": "show_controls", "label": "Show video controls", "default": false },
    { "type": "checkbox", "id": "show_nav", "label": "Show prev/next buttons", "default": true },
    { "type": "range", "id": "pad_top", "label": "Padding top (px)", "min": 0, "max": 120, "step": 4, "default": 28 },
    { "type": "range", "id": "pad_bottom", "label": "Padding bottom (px)", "min": 0, "max": 120, "step": 4, "default": 28 }
  ],
  "blocks": [
    {
      "type": "video",
      "name": "Video",
      "settings": [
        { "type": "radio", "id": "video_source", "label": "Video source", "default": "file", "options": [
          { "value": "file", "label": "Shopify video file" },
          { "value": "url", "label": "MP4 URL" }
        ]},
        { "type": "video", "id": "video", "label": "Video (Shopify file)" },
        { "type": "url", "id": "video_url", "label": "Video URL (.mp4 recommended)" },
        { "type": "image_picker", "id": "poster", "label": "Poster image (optional)" },
        { "type": "product", "id": "product", "label": "Map to product" },
        { "type": "checkbox", "id": "show_product_info", "label": "Show product info overlay", "default": true },
        { "type": "text", "id": "button_label", "label": "CTA button label", "default": "Shop now" },
        { "type": "checkbox", "id": "link_entire_card", "label": "Make entire card clickable (product page)", "default": false }
      ]
    }
  ],
  "max_blocks": 24,
  "presets": [{ "name": "MX Reels – Sonali", "category": "Media" }]
}
{% endschema %}
